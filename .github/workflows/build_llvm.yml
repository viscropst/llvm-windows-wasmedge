name: build_llvm

on:
  workflow_call:
    inputs:
      host-arch:
        description: the host arch to build
        type: string
        default: x64
        required: false
      target-arch:
        description: the target arch to build
        type: string
        default: x64
        required: true
      llvm-targets:
        description: llvm targets to build (use ';' to split)
        type: string
        default: X86
        required: false

jobs:
  build_withClang:
    name: Build llvm on Windows with Clang
    runs-on: windows-latest
    steps:
      - name: Install dependency
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install cmake ninja vswhere

      - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1
        with:
          sdk-version: 19041

      # replaces git clone with actions/checkout
      # arg of command:
      # --branch llvmorg-13.0.0 --depth 1 https://github.com/llvm/llvm-project.git
      - uses: actions/checkout@v2
        with:
          repository: 'llvm/llvm-project'
          ref: 'llvmorg-13.0.0'
          fetch-depth: '1'

      - name: Build llvm clang+lld
        run: |
          $vsPath = (vswhere -latest -property installationPath)
          Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
          Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation -DevCmdArguments "-arch=${{inputs.target-arch}} -host_arch=${{inputs.host-arch}} -winsdk=10.0.19041.0"
          
          echo "::group::configure by cmake"
          $Env:CC = "cl"
          $Env:CXX = "cl"
          cmake -Bbuild.clang+lld -GNinja `
          -DCMAKE_SYSTEM_VERSION="10.0.19041.0" `
          -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL `
          -DCMAKE_BUILD_TYPE=Release `
          -DCPACK_GENERATOR=ZIP `
          -DCPACK_PACKAGE_NAME="llvm.clang+lld.${{inputs.target-arch}}" `
          -DLLVM_USE_CRT_RELEASE=MT `
          -DLLVM_ENABLE_LIBXML2=ON `
          "-DCMAKE_INSTALL_PREFIX=$pwd\\prefix" `
          -DLLVM_TARGETS_TO_BUILD="${{inputs.llvm-targets}}" `
          -DLLVM_ENABLE_PROJECTS="clang;lld" llvm
          echo "::endgroup::"
          
          echo "::group::building clang"
          cmake --build build.clang+lld --clean-first -- -j 16
          echo "::endgroup::"

      - name: Build llvm lld
        run: |
          $vsPath = (vswhere -latest -property installationPath)
          Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
          Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation -DevCmdArguments "-arch=${{inputs.target-arch}} -host_arch=${{inputs.host-arch}} -winsdk=10.0.19041.0"
          
          echo "::group::reuse the vcpkg"
          $Env:CMAKE_TOOLCHAIN_FILE = "$pwd/vcpkg/scripts/buildsystems/vcpkg.cmake"
          echo "::endgroup::"

          echo "::group::configure by cmake"
          $Env:CC = "cl"
          $Env:CXX = "cl"
          cmake -Bbuild.lld -GNinja `
          -DCMAKE_SYSTEM_VERSION="10.0.19041.0" `
          -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL `
          -DCMAKE_BUILD_TYPE=Release `
          -DCPACK_GENERATOR=ZIP `
          -DCPACK_PACKAGE_NAME="llvm.lld.${{inputs.target-arch}}" `
          -DLLVM_USE_CRT_RELEASE=MT `
          -DLLVM_ENABLE_LIBXML2=ON `
          "-DCMAKE_INSTALL_PREFIX=$pwd\\prefix" `
          -DLLVM_TARGETS_TO_BUILD="${{inputs.llvm-targets}}" `
          -DLLVM_ENABLE_PROJECTS="lld" src\\llvm
          echo "::endgroup::"
          
          echo "::group::building lld"
          cmake --build build.lld --clean-first -- -j 16
          echo "::endgroup::"

      - name: Package llvm
        run: |
          cmake --build build.clang+lld --target package
          cmake --build build.lld --target package

      - name: Content list
        run: |
          echo "::group::clang+lld"
          ls ./build.clang+lld
          echo "::endgroup::"

          echo "::group::lld"
          ls ./build.lld
          echo "::endgroup::"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: llvm
          path: |
            build.clang+lld/llvm.clang+lld.*.zip
            build.lld/llvm.lld*.zip
          retention-days: 5
